# Node.js with Angular
# Build a Node.js project that uses Angular.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  branches:
    include:
      - main
      - production-branch
      - qa-branch


variables:
  - name: TAG_COUNTER
    value: 1
  - name: appName
    value: ''
  - ${{ if eq(variables['Build.SourceBranchName'], 'main') }}:
      - group: PMC-variables-development
  - ${{ if eq(variables['Build.SourceBranchName'], 'production-branch') }}:
      - group: PMC-variables-production
  - ${{ if eq(variables['Build.SourceBranchName'], 'qa-branch') }}:
      - group: PMC-variables-qa
  

pool:
  name: 'Windows pool DEV'
  

steps:
# - task: NodeTool@0
#   inputs:
#     versionSpec: '20.x'
#   displayName: 'Install Node.js'



- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |

      cat docker-compose-old.yml > docker-compose.yml
      cat docker-compose.yml
      #az login
      az acr login --name cmprg1citacr001
      repositories=$(az acr repository list -n cmprg1citacr001 --output tsv)
      for repo in $repositories; do
          if [ "$repo" == "pmc/cms" ]; then
              echo "Repository: $repo"
              tags=$(az acr repository show-tags -n cmprg1citacr001 --repository $repo --output tsv | tac)
              for tag in $tags; do
                  echo "Tag: $tag"
                  tag_number=$(echo "$tag" | grep -oE '[0-9]+$')  # Extract numeric part of the tag
                  incremented_tag=$((tag_number + 1))  # Increment the numeric part
                  TAG_COUNTER=$incremented_tag
                  echo "##vso[task.setvariable variable=TAG_COUNTER]$incremented_tag"
                  #TAG_COUNTER=7
                  sed -i "s/\${TAG_COUNTER}/${TAG_COUNTER}/g" docker-compose.yml
                  
                  echo $incremented_tag
                  break
              done
              break  # Exit the loop after finding the desired repository
          fi
      done
      
      # Print the contents of docker-compose.yml to verify TAG_COUNTER substitution
      
      cat docker-compose.yml
    
- task: Bash@3
  inputs:
    targetType: 'inline'
    script: |
      # Commit the changes
      git config --global user.email "marcos313art@gmail.com"
      git config --global user.name "MarcosAP31"
      git add .
      git commit -m "New changes [skip ci]"
      # Push the changes to the repository
      git push https://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@github.com/MarcosAP31/pmc.git HEAD:main
      #git pull https://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@github.com/MarcosAP31/pmc.git HEAD:main

# Replace 'main' with your branch name if different

- task: SSH@0
  inputs:
    sshEndpoint: 'sshServiceConnection3'
    runOptions: 'commands'
    commands: |
      sudo rm -r /pmc/src --force
      sudo mkdir /pmc/src
      sudo git clone https://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@github.com/MarcosAP31/pmc.git /pmc/src
            
  continueOnError: true


- task: SSH@0
  inputs:
    sshEndpoint: 'sshServiceConnection3'
    runOptions: 'commands'
    commands: |
      sudo cp /pmc/src/docker-compose.yml /pmc
      sudo /pmc/deploy.sh   
      
  continueOnError: true




- task: SSH@0
  inputs:
    sshEndpoint: 'sshServiceConnection3'
    runOptions: 'commands'
    commands: |
      sudo cp LibreOffice_7.3.4_Linux_x86-64_deb.tar.gz /pmc/src/install/software
      
      sudo cp -r /pmc/src/yetiforce /pmc/db
      ls -al /pmc
      sudo docker compose -f /pmc/docker-compose.yml build cms
      sudo docker compose -f /pmc/docker-compose.yml up -d
      
  continueOnError: true

- task: SSH@0
  inputs:
    sshEndpoint: 'sshServiceConnection3'
    runOptions: 'commands'
    commands: |
      
      az acr login --name cmprg1citacr001
      docker tag pmc/cms:v$(TAG_COUNTER) cmprg1citacr001.azurecr.io/pmc/cms:v$(TAG_COUNTER)
      docker push cmprg1citacr001.azurecr.io/pmc/cms:v$(TAG_COUNTER)
      docker tag mariadb:10.5 cmprg1citacr001.azurecr.io/pmc/mariadb:10.5
      docker push cmprg1citacr001.azurecr.io/pmc/mariadb:10.5
      docker container ls

  continueOnError: true




# - task: Docker@2
#   inputs:
#     repository: '$(repository)'
#     command: 'build'
#     Dockerfile: 'Dockerfile'  # Asegúrate de tener un Dockerfile en la ubicación correcta
#     tags: '$(Build.BuildId)'
#     displayName: 'Docker Build'

# - task: Docker@2
#   inputs:
#     repository: '$(repository)'
#     command: 'push'
#     tags: '$(Build.BuildId)'
#     displayName: 'Docker Push'

